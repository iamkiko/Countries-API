{"version":3,"sources":["components/country.module.scss","components/Filter.js","components/Country.js","components/Languages.js","components/Weather.js","components/DetailedCountry.js","components/CountryList.js","App.js","index.js"],"names":["module","exports","container","button","country","detail","regular","flag","weatherIcon","Filter","_ref","handleFilterChange","chosenCountry","react_default","a","createElement","value","onChange","Country","setCountry","name","className","countryStyles","onClick","Languages","languages","map","language","key","Weather","_useState","useState","_useState2","Object","slicedToArray","weather","setWeather","_useState3","_useState4","displayWeather","setDisplayWeather","useEffect","url","concat","capital","axios","get","then","response","console","log","data","main","temp","temp_min","temp_max","description","wind","speed","deg","clouds","all","humidity","DetailedCountry","src","alt","height","width","subregion","population","components_Languages","components_Weather","CountryList","countries","showCountry","length","components_DetailedCountry","components_Country","App","setCountries","setChosenCountry","countriesToShow","filter","toLowerCase","includes","components_Filter","event","target","components_CountryList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7d52845.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"country_container__1HANJ\",\"button\":\"country_button__2dpk_\",\"country\":\"country_country__2WDCH\",\"detail\":\"country_detail__1yvpN\",\"regular\":\"country_regular__1s1Dg\",\"flag\":\"country_flag__2FVKQ\",\"weatherIcon\":\"country_weatherIcon__ihr1F\"};","import React from \"react\";\n\n//destructing the inputs of country searched for in the input and initial country searched for\nconst Filter = ({ handleFilterChange, chosenCountry }) => {\n  return (\n    <div>\n      Find countries:{\" \"}\n      <input value={chosenCountry} onChange={handleFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport countryStyles from \"./country.module.scss\";\n\n//destructure country and setCountry (initial states)\nconst Country = ({ country, setCountry }) => {\n  const showCountry = () => {\n    //button functionality to show more when clicked below\n    setCountry(country.name);\n  };\n  return (\n    <div>\n      {country.name}{\" \"}\n      <button className={countryStyles.button} onClick={showCountry}>\n        Show\n      </button>\n    </div>\n  );\n};\nexport default Country;\n","import React from 'react'\n\nconst Languages = ({country}) => {\n    const showLanguages = () => {\n        return country.languages.map(language => <li key={language.name}>{language.name}</li> )\n    } \n    return (\n        <div>\n            <ul>{showLanguages()}</ul>\n        </div>\n    )\n}\n\nexport default Languages\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport countryStyles from \"./country.module.scss\";\n\nconst Weather = ({ country }) => {\n  //initial state for weather\n  const [weather, setWeather] = useState(\"\");\n  const [displayWeather, setDisplayWeather] = useState(false);\n\n  //using API with the specific country capital name for weather as per docs\n  useEffect(() => {\n    const key = `68af2c5582e650e0dc1c65f6c3717d65`;\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${country.capital}&appid=${key}&units=metric`;\n\n    axios.get(url).then(response => {\n      console.log(\"response.data: \", response.data);\n      setWeather(response.data); //updating state based off JSON values\n      setDisplayWeather(true); //updating state\n    });\n  }, [country.capital]); //we want to only fetch data when the component mounts -> the effect depends on the query so when changed, data request is fired\n\n  //using conditional flow; a) if init state of displayWeather is true, show the details b) loading/fetching data\n  return (\n    <div>\n      {!displayWeather ? (\n        <p>Please wait...</p>\n      ) : (\n        <div>\n          <h3>Weather in {country.capital}</h3>\n          <p>\n            <span className={countryStyles.detail}>Current temperature:</span>{\" \"}\n            {weather.main.temp}c\n          </p>\n          <p>\n            <span className={countryStyles.detail}>Min temp:</span>{\" \"}\n            {weather.main.temp_min}c\n          </p>\n          <p>\n            <span className={countryStyles.detail}>Max temp:</span>{\" \"}\n            {weather.main.temp_max}c\n          </p>\n          <p>\n            {\" \"}\n            <span className={countryStyles.detail}>Conditions: </span>\n            {weather.weather[0].description}\n          </p>\n\n          <p>\n            <span className={countryStyles.detail}>Wind: </span>{\" \"}\n            {weather.wind.speed} kph with a direction of {weather.wind.deg}{\" \"}\n            degrees\n          </p>\n          <p>\n            <span className={countryStyles.detail}>Cloud coverage:</span>{\" \"}\n            {weather.clouds.all}%\n          </p>\n          <p>\n            <span className={countryStyles.detail}>Humidity:</span>{\" \"}\n            {weather.main.humidity}%\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport Languages from \"./Languages\";\nimport Weather from \"./Weather\";\nimport countryStyles from \"./country.module.scss\";\n\n//obtaining country (init state)\nconst DetailedCountry = ({ country }) => {\n  return (\n    <div className={countryStyles.country}>\n      <div key={country.name}>\n        <h2>{country.name}</h2>\n        <img\n          className={countryStyles.flag}\n          src={country.flag}\n          alt={`${country.name}'s flag`}\n          height=\"170\"\n          width=\"170\"\n        />\n        <p>\n          <span className={countryStyles.detail}>Region: </span>\n          {country.subregion}\n        </p>\n        <p>\n          <span className={countryStyles.detail}>Capital: </span>\n          {country.capital}\n        </p>\n        <p>\n          <span className={countryStyles.detail}>Population: </span>{\" \"}\n          {country.population}\n        </p>\n      </div>\n      <div className={countryStyles.language}>\n        <h3>Languages spoken: </h3>\n        <Languages country={country} />\n      </div>\n      <div className={countryStyles.weather}>\n        <Weather country={country} />\n      </div>\n    </div>\n  );\n};\n\nexport default DetailedCountry;\n","import React from \"react\";\nimport Country from \"./Country\";\nimport DetailedCountry from \"./DetailedCountry\";\n\n//obtain initial state and showCountry function from Country component\nconst CountryList = ({ countries, setCountry, showCountry }) => {\n  // conditional flow for varying amount of results\n  if (countries.length > 10) {\n    return <div>Too many matches, specify another filter</div>;\n  } else if (countries.length === 1) {\n    return (\n      <DetailedCountry country={countries[0]} /> //returns an array but if only one country, obtain the 'first'/only result\n    );\n  } else if (countries.length > 1) {\n    //to show a list of country names (country) + updated state (setCountry) + button to show more info about specific country (showCountry)\n    return countries.map(country => (\n      <Country\n        key={country.name}\n        country={country}\n        setCountry={setCountry}\n        showCountry={showCountry}\n      />\n    ));\n  } else {\n    return <div>No countries match your search.</div>;\n  }\n};\n\nexport default CountryList;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Filter from \"./components/Filter\";\nimport CountryList from \"./components/CountryList\";\nimport countryStyles from \"./components/country.module.scss\";\n\nconst App = () => {\n  //setting state\n  const [countries, setCountries] = useState([]);\n  const [chosenCountry, setChosenCountry] = useState(\"\");\n\n  //obtaining data from country API via useEffect\n  useEffect(() => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n\n  //updating input search and updating state of country searched for\n  const handleFilterChange = event => {\n    setChosenCountry(event.target.value);\n  };\n\n  //filter/search function\n  const countriesToShow = countries.filter(country =>\n    country.name.toLowerCase().includes(chosenCountry.toLowerCase())\n  );\n\n  return (\n    <div className={countryStyles.container}>\n      <Filter\n        chosenCountry={chosenCountry}\n        handleFilterChange={handleFilterChange}\n      />\n      <h1>Countries & Their Information</h1>\n      <CountryList countries={countriesToShow} setCountry={setChosenCountry} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}